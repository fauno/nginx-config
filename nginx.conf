# Usuario y grupo
# Con esto todos los archivos nuevos en /srv/http son del grupo http
# chown -R http:http /srv/http
# chmod -R g+s /srv/http
# ver chmod(1) -> groupid bit
user http http;
worker_processes  1;

#error_log  /var/log/nginx/error.log notice;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    server_names_hash_bucket_size 64;

# Caches
    fastcgi_cache_path /srv/cache/nginx/fcgi keys_zone=fcgi:10m levels=1:2 inactive=60m;
    fastcgi_cache_key "$scheme$request_method$host$request_uri";

    proxy_cache_path /srv/cache/nginx/proxy keys_zone=proxy:10m levels=1:2 inactive=60m;
    proxy_cache_key "$scheme$request_method$host$request_uri";

# Limitar peticiones a 1 por segundo con esta opción:
# limit_req zone=one burst=2;
    limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;

    include       mime.types;
# Servir como texto plano por defecto si te rompe las bolas que los
# archivos de texto con extensión desconocida se pongan para descarga.
    default_type  text/plain;

# Todos los logs son anónimos
    log_format  main  '127.0.0.1 - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "127.0.0.1"';

# Los servicios proxeados también
    proxy_set_header X-Real-IP 127.0.0.1;
    proxy_set_header X-Forwarded-For 127.0.0.1;
# Y passenger...
    passenger_env_var REMOTE_ADDR 127.0.0.1;
    passenger_env_var REMOTE_HOST 127.0.0.1;

# Tamaño máximo de archivo
    client_max_body_size 211M;
    client_body_buffer_size 2084k;

# Un log por cada server
    access_log  /var/log/nginx/$server_name.access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;
    gzip_types text/plain text/css application/x-javascript;

# Ubicación por defecto, por ejemplo:
# mkdir /srv/http/hackcoop.com.ar
    root /srv/http/$server_name;

# Certificados, cambiar a en el host del dominio principal
#    ssl_certificate /etc/ssl/certs/hackcoop.com.ar.crt;
# groupadd --system keys
# chown -R root:keys /etc/ssl/private
# chmod -R g+s /etc/ssl/private
# gpasswd -a http keys
    ssl_certificate     /etc/ssl/certs/x.hackcoop.com.ar.crt;
    ssl_certificate_key /etc/ssl/private/hackcoop.com.ar.key;
    ssl_dhparam         /etc/ssl/private/2048.dh;

# Perfect Forward Secrecy
# Según https://github.com/ioerror/duraconf
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_ciphers ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:DHE-DSS-AES256-SHA:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_buffer_size 8k;

# Configuración de Ruby Passenger
# Necesita que nginx esté compilado con este módulo
    passenger_root /usr/lib/passenger;
    passenger_ruby /usr/bin/ruby;
    rails_env production;
    passenger_friendly_error_pages off;

# Servidores principales
    include /etc/nginx/upstreams/*.conf;
# Sitios locales
    include /etc/nginx/sites/*.conf;

}
